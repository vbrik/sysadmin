# check_mk plugin to monitor some UPS yes/no alarms defined
# in EATON Pulsar MIB. These checks do not require configurable
# parameters: 'no' is always good, 'yes' is always bad.
#
# uepul = ups eaton pulsar

uepul_checks = (
    ('Battery Fault', '5.9.0'),
    ('Charger Fault', '5.15.0'),
    ('Battery Replacement', '5.11.0'),
    ('Battery Low Condition', '5.16.0'),
    ('Output on Battery', '7.3.0'),
    ('Output Overload', '7.10.0'),
    ('Output Overheating', '7.11.0'),
)
uepul_items, uepul_oids = zip(*uepul_checks)

def uepul_inventory(checkname, info):
    if info:
        return [(i, '', None) for i,v in zip(uepul_items, info[0]) if v]
    else:
        return []

def uepul_check_alarm(item, params, info):
    idx = uepul_items.index(item)
    val = info[0][idx]
    alarm = ('yes' if val=='1' else 'no' if val=='2' else 'unknown')
    state = (0 if alarm=='no' else 1 if alarm=='yes' else 3)
    text = '%s: %s' % (item, alarm)
    return (state, nagios_state_names[state] + ' - ' + text)

check_info['ups_pulsar'] = {
        'service_description': 'UPS %s',
        'check_function': uepul_check_alarm,
        'inventory_function': uepul_inventory,
        'has_perfdata': False,
        'snmp_info': ('.1.3.6.1.4.1.705.1', uepul_oids),
        'snmp_scan_function': lambda oid: 'Dell UPS' in oid(".1.3.6.1.2.1.1.1.0"),
}
# vim:ft=python
